/*
Copyright 2014-2019 FIT2CLOUD 飞致云..

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package versioned

import (
	glog "github.com/golang/glog"
	kubeappsv1alpha1 "github.com/kubeapps_plus/cmd/apprepository-controller/pkg/client/clientset/versioned/typed/apprepository/v1alpha1"
	discovery "k8s.io/client-go/discovery"
	rest "k8s.io/client-go/rest"
	flowcontrol "k8s.io/client-go/util/flowcontrol"
)

type Interface interface {
	Discovery() discovery.DiscoveryInterface
	KubeappsV1alpha1() kubeappsv1alpha1.KubeappsV1alpha1Interface
	// Deprecated: please explicitly pick a version if possible.
	Kubeapps() kubeappsv1alpha1.KubeappsV1alpha1Interface
}

//Clientset包含组的客户端。每组只有一个
//客户端集中包含的版本
type Clientset struct {
	*discovery.DiscoveryClient
	kubeappsV1alpha1 *kubeappsv1alpha1.KubeappsV1alpha1Client
}

// KubeappsV1alpha1 retrieves the KubeappsV1alpha1Client
func (c *Clientset) KubeappsV1alpha1() kubeappsv1alpha1.KubeappsV1alpha1Interface {
	return c.kubeappsV1alpha1
}

//不推荐：Kubeapps检索KubeappsClient的默认版本。
//请明确选择版本。
func (c *Clientset) Kubeapps() kubeappsv1alpha1.KubeappsV1alpha1Interface {
	return c.kubeappsV1alpha1
}

//发现检索发现客户端
func (c *Clientset) Discovery() discovery.DiscoveryInterface {
	if c == nil {
		return nil
	}
	return c.DiscoveryClient
}

// NewForConfig 为给定的配置创建一个新的Clientset.
func NewForConfig(c *rest.Config) (*Clientset, error) {
	configShallowCopy := *c
	if configShallowCopy.RateLimiter == nil && configShallowCopy.QPS > 0 {
		configShallowCopy.RateLimiter = flowcontrol.NewTokenBucketRateLimiter(configShallowCopy.QPS, configShallowCopy.Burst)
	}
	var cs Clientset
	var err error
	cs.kubeappsV1alpha1, err = kubeappsv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}

	cs.DiscoveryClient, err = discovery.NewDiscoveryClientForConfig(&configShallowCopy)
	if err != nil {
		glog.Errorf("failed to create the DiscoveryClient: %v", err)
		return nil, err
	}
	return &cs, nil
}

// NewForConfigOrDie 为给定的配置创建一个新的客户端集
// 如果配置中有错误，则会死机.
func NewForConfigOrDie(c *rest.Config) *Clientset {
	var cs Clientset
	cs.kubeappsV1alpha1 = kubeappsv1alpha1.NewForConfigOrDie(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClientForConfigOrDie(c)
	return &cs
}

// New creates a new Clientset for the given RESTClient.
func New(c rest.Interface) *Clientset {
	var cs Clientset
	cs.kubeappsV1alpha1 = kubeappsv1alpha1.New(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClient(c)
	return &cs
}
